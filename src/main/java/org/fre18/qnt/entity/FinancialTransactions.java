package org.fre18.qnt.entity;
// Generated Sep 27, 2018 10:49:54 AM by Hibernate Tools 5.2.10.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * FinancialTransactions generated by hbm2java
 */
@Entity
@Table(name = "financial_transactions", catalog = "invoicespaymanents")
public class FinancialTransactions implements java.io.Serializable {

	private Integer transactionId;
	private Accounts accounts;
	private Invoices invoices;
	private TransactionTypes transactionTypes;

	public FinancialTransactions() {
	}

	public FinancialTransactions(Accounts accounts, Invoices invoices, TransactionTypes transactionTypes) {
		this.accounts = accounts;
		this.invoices = invoices;
		this.transactionTypes = transactionTypes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "transaction_id", unique = true, nullable = false)
	public Integer getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Integer transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false)
	public Accounts getAccounts() {
		return this.accounts;
	}

	public void setAccounts(Accounts accounts) {
		this.accounts = accounts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "invoice_number", nullable = false)
	public Invoices getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Invoices invoices) {
		this.invoices = invoices;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transaction_type_code", nullable = false)
	public TransactionTypes getTransactionTypes() {
		return this.transactionTypes;
	}

	public void setTransactionTypes(TransactionTypes transactionTypes) {
		this.transactionTypes = transactionTypes;
	}

}

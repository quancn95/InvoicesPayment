package org.fre18.qnt.entity;
// Generated Sep 27, 2018 10:49:54 AM by Hibernate Tools 5.2.10.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Proxy;

/**
 * OrderItems generated by hbm2java
 */
@Entity
@Proxy(lazy = false)
@Table(name = "order_items", catalog = "invoicespaymanents")
public class OrderItems implements java.io.Serializable {

	private Integer orderItemId;
	private InvoiceLineItems invoiceLineItems;
	private Orders orders;
	private Products products;

	public OrderItems() {
	}

	public OrderItems(InvoiceLineItems invoiceLineItems, Orders orders, Products products) {
		this.invoiceLineItems = invoiceLineItems;
		this.orders = orders;
		this.products = products;
	}

	@GenericGenerator(name = "org.fre18.qnt.entity.OrderItemsIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "invoiceLineItems"))
	@Id
	@GeneratedValue(generator = "org.fre18.qnt.entity.OrderItemsIdGenerator")

	@Column(name = "order_item_id", unique = true, nullable = false)
	public Integer getOrderItemId() {
		return this.orderItemId;
	}

	public void setOrderItemId(Integer orderItemId) {
		this.orderItemId = orderItemId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public InvoiceLineItems getInvoiceLineItems() {
		return this.invoiceLineItems;
	}

	public void setInvoiceLineItems(InvoiceLineItems invoiceLineItems) {
		this.invoiceLineItems = invoiceLineItems;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

}
